{:title "Jim Coplien and Bob Martin Debate TDD"
 :layout :post
 :tags  ["testing"]
 :toc false
}

== https://youtu.be/KtHQGs3zFAM[Youtube Link]

=== *Speaker*
Jim Coplien and Bob Martin

=== *Thoughts

There are so many mixed feelings about TDD that I can't
produce significant comments around it without being in the
position of contradict myself in two months from now.

Fact is, people misuse a lot of what TDD *I think* should
do, by saying that test is the only thing that matter. And
in practice, I see really big changes in design driven by
business domain knowledge.

Reality is that developers does not like to understand much
about their domains and are always concerned with small
words they learn on the internet about topics that cannot
easily reach agreement.

I prefer for now, to concern myself with other issues around
code development.


=== *Quotes*
[Jim Coplien] I don't accept the thesis that the practice of TDD is a
pre-requisite for professionalism in software development in 2007

[Jim Coplien] You want to capitalize yourself with knowledge upfront. Make
some hard decisions upfront

You can't hide a bad architecture with a great interface

Where is code, is bugs


=== *Recomendations*
1. We need a good definition for professionalism in the area?
2. Test by contract, pr√©-conditions, post-conditions and invariants