{:title "Design and prototype a language in Clojure"
 :layout :post
 :tags  ["clojure"]
 :toc false
}

== https://youtu.be/i1KVwoE3n28[Youtube Link]

=== *Speaker*
Jeanine Adkisson, programmer.


=== *Thoughts*

Interesting talk. This came in a very nice timing, I am
currently building a library called
https://github.com/wandersoncferreira/meta-schema[meta-schema]
that got some good attention very rapidly. I want to try to
keep it moving and make a good language to people to use it.

I somewhat made some of the recommendations pointed out by
Jeanine and it has been very nice to see how people is
talking about the library. I need to improve a lot of code
and mainly evolve the language as I go.


=== *Quotes*

But *why* would you ever make a language?

What is a language? A language is a program that allows
*complex* *human input* to be *interpreted by a computer*


Disciplines for Data Driven Architecture

- If data is persisted, what is the migration strategy?
- Who provides the data? How is it composed? How is it stored?
- Is the data intended for humans or is it generated by machines?
- What behaviors/resources do you want the data to specify?
- What behaviors/resources do you want to exclude?


=== *Recommendations*

1. We should expand our notion of **languages** at computers
2. Computer understands humans
3. Human understands computer's understanding
4. Human understands how to express new goals
5. Questions: how will users store, write, update and run code?
6. Questions: what kinds of errors can happen, and how will they be reported?
7. Questions: how much power do your users need? how much reliability?
8. Pick a complex task and try to accomplish it
9. Don't be afraid to write languages!
10. Learn to understand when a language is an appropriate solution
11. UNDERSTAND YOUR USERS