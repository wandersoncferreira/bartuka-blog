{:title "Is TDD Dead? Of course not! So what's all the fuss about then?"
 :layout :post
 :tags  ["testing"]
 :toc false
}

== https://youtu.be/PCEHRFHKZSk[Youtube Link]

=== *Speaker*
Emily Bache, consultant

=== *Thoughts*

I really don't see the point of TDD in the narrow sense
defined by Emily. This is a methodology that might be very
good to some people and certainly not useful to every single
scenario of your life.

When he critizes the design when you use TDD it is mostly
about the broad design of your system too, not only in the
small. Therefore, I still agree with David on this one.


=== *Quotes*

Test-first is like a fundamentalist religion

Test-first leads to "design damage"

Too much focus on unit tests - other kinds are more useful


I'm not a great programmer; I'm just a good programmer with
great habits.


=== *Recommendations*

1. Below 2-5, TDD (in the narrowest sense)
2. a test must drive every line of production code
3. design in tiny increments
4. completely isolated units with stubs, mocks, and etc
5. hundreds of tests run in less than a second pinpoint defects


=== *Books*

1. Code dojo handbook