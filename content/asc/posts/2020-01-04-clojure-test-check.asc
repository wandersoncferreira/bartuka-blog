{:title "Powerful testing with test.check"
 :layout :post
 :tags  ["testing", "generative", "clojure"]
 :toc false
}

== https://youtu.be/JMhNINPo__g[Youtube Link]

=== *Speaker*
Reid Draper, Sr Engineering Manager at Github

=== *Thoughts*

I find only difficult to use this style on a daily basis at
work for some reasons: 1) It's hard to find properties that
should hold true that are not very complected and 2) the
trusted implementation is often not there.

Maybe some utils functions to deal with dates, data
transformations and things like that would be more
appropriate. But still, I lack the trusted implementation
for these, maybe writing a second version to the generator
is good enough.

=== *Quotes*

Test Check is a different way to thinking about testing

property-based testing is what test.check is using

concurrent programs are hard to test - because their
execution is non-deterministic

=== *Recomendations*

1. thinking in properties
2. finding trusted implementation
3. we have to write generators