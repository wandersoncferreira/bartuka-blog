{:title "Naked Performance (with Clojure)"
 :layout :post
 :tags  ["clojure"]
 :toc false
}

== https://youtu.be/3SSHjKT3ZmA[Youtube Link]

=== *Speaker*
Tommi Reiman, Founder at Metosin

=== *Thoughts*

The amount of work that Metosin has done for the clojure
community is really high! Thanks for that. Tommi is always
thinking about how to make things better and thinking in
different way.

=== *Quotes*

"We should forget about small efficiencies, say about 97% of the time:
premature optimization is the root of all evil. Yet we should not pass up
our opportunities in that critical 3%"

Performqant Clojure Code

.. Reflection, Boxed Math, Dynamic Vars, ...
.. Cost of Abstractions
.. Cost of Immutability

"This writing fast Clojure libs is getting out of hand, just lost the ="

=== *Recommendations*
1. Measure and read the source
2. Use Records a lot for performance
3. Merge takes a lot of time to compute, avoid it
4. If performance is a objective, we can design these solutions
5. Try to find the right algorithm for your problem
6. Embrace Java
7. Use `jsonista` to parse json