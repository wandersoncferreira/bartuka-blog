{:title "The many meanings of Event-Driven architecture"
 :layout :post
 :tags  ["architecture", "design"]
 :toc false
}

== https://youtu.be/STKCRSUsyP0[Youtube Link]

=== *Speaker*
Martin Fowler, consultant at Thoughworks

=== *Thoughts*

=== *Quotes*

Four patterns for event-driven:

1. *Event Notification*: Event as a notification mechanism between multiple systems
2. *Event-carried State Transfer*: Upstream systems broadcast all the data and Downstream system must keep a copy of all data they are interested
3. *Event Sourcing*:

Events are only indicating a change in the system without
expecting anything specific to happen.

=== *Recommendations*

1. Watch out for situations where you need the dependency switch between your systems
2. Events or commands are exactly the same internally, but the naming convention changes
3. The event-carried state transfer is very prone to produce eventual inconsistencies between systems