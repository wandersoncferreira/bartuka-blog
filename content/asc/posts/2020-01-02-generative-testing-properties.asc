{:title "Generative Testing: Properties, State and Beyond"
 :layout :post
 :tags  ["testing"]
 :toc false
}

== https://youtu.be/D2TCuDXmyw4[Youtube Link]

=== *Speaker*

Jan Stepien, Consulting with INNOQ

=== *Thoughts*

A lot of examples about how to perform tests. Despite the
fact that little information was provided about how to use
this concepts in the large, some very interesting ideas
comes to mind.

The idea of stateful testing is very bad. You have to keep
track of a lot of different stuff. However, there are some
aspects to the idea of generation a list of actions that
your code should be complaint with and run this list on top
of the code, is very useful.


=== *Quotes*

Don't write tests! Generate them


=== *Recomendations*

1. Testing the Hard stuff and staying sane
2. Generate actions changing the state
3. Apply each action to the state, if possible
4. After each application verify the model


=== *Links*

1. https://begriffs.com/posts/2017-01-14-design-use-quickcheck.html[The Design and use of QuickCheck]
2. http://cvps2715916663.hostwindsdns.com/wp-content/uploads/2014/08/erlang001-arts.pdf[Testing Telecoms Software with Quviq QuickCheck]
3. https://youtu.be/dE3KT7hHkKY[Jepsen IV - Hope Springs Eternal]
4. https://vimeo.com/100976693[Generative testing with clojure.test.check]
