{:title "There is no such thing as a microservice"
 :layout :post
 :tags  ["architecture", "patterns"]
 :toc false
}

== https://youtu.be/FXCLLsCGY0s[Youtube Link]

=== *Speaker*
Chris Richardson, consultant and trainer


=== *Thoughts*

The course I did with Chris Richardson at OReilly Software
Architecture Conference in San Jose was very interesting and
it changed my view about Microservices. I even changed the
layout of the teams at my company.

This presentation goes on about some topics that are very
old and new at the same time. The amount of knowledge and
simplicity in his talks is amazing.

Now, about MS, I already saw people advocating for such a
variety of definitions to it that for me it does not matter
anymore. The main idea right now, is to get the domains of
my problem right. After that, the MS becomes a practice to
scale software code to massive usage.

I like the quote: "If you can't build a single monolith, why
do you think you can build many small monolith?"


=== *Quotes*

The software architecture of a computing system is the set
of structures needed to reason about the system, which
comprise software elements, relations among them, and
properties of both.


4+1 view model: logical view, implementation view, process
view, deployment view and scenarios


**logical view**: describe the code created and relationship
between our classes

**implementation view**: output of the build process. executable
jar files

**process view**: executable components at runtime and
  describe other entities such as databases as well

**deployment view**: how these processes run in
  nodes/machines